{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//exports\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n  }\n  //getTasks\n  getTasks(empId) {\n    return this.http.get('/api/employees/' + empId + '/tasks'); //http://localhost:3000/api/employees/1/tasks\n  }\n  //createTask\n  addTask(empId, text) {\n    return this.http.post('/api/employees/' + empId + '/tasks', {\n      text\n    }); //http://localhost:3000/api/employees/1/tasks\n  }\n  /**\n   * @description deleteTask function to delete a task for an employee by empId and taskId\n   * @param empId\n   * @param taskId\n   * @returns status code 204 (no content)\n   */\n  deleteTask(empId, taskId) {\n    console.log('/api/employees/' + empId + '/tasks/' + taskId); //log the task id to the console\n    return this.http.delete('/api/employees/' + empId + '/tasks/' + taskId); //make a delete request to API\n  }\n  /**\n   * @description updateTask function to update a task for an employee by empId\n   * @param empId\n   * @param todo list of tasks to do\n   * @param done list of tasks done\n   * @returns status code 204 (no content)\n   */\n  updateTask(empId, todo, done) {\n    return this.http.put('/api/employees/' + empId + '/tasks', {\n      todo,\n      done\n    });\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TaskService","constructor","http","getTasks","empId","get","addTask","text","post","deleteTask","taskId","console","log","delete","updateTask","todo","done","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/jocelynthegreat/Documents/buwebdev/nodebucket/src/app/shared/task.service.ts"],"sourcesContent":["/**\n * Title: task.service.ts\n * Author: Jocelyn Dupuis\n * Date: 01/18/2024\n * Description: ts file for task service\n */\n\n//import statements\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Item } from './item.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\n//exports\nexport class TaskService {\n\n  constructor(private http: HttpClient) { }\n\n  //getTasks\n  getTasks(empId: number) {\n    return this.http.get('/api/employees/' + empId + '/tasks'); //http://localhost:3000/api/employees/1/tasks\n  }\n\n  //createTask\n  addTask(empId: number, text: string) {\n    return this.http.post('/api/employees/' + empId + '/tasks', { text }); //http://localhost:3000/api/employees/1/tasks\n  }\n\n  /**\n   * @description deleteTask function to delete a task for an employee by empId and taskId\n   * @param empId\n   * @param taskId\n   * @returns status code 204 (no content)\n   */\n  deleteTask(empId: number, taskId: string) {\n    console.log('/api/employees/' + empId + '/tasks/' + taskId) //log the task id to the console\n    return this.http.delete('/api/employees/' + empId + '/tasks/' + taskId) //make a delete request to API\n  }\n\n  /**\n   * @description updateTask function to update a task for an employee by empId\n   * @param empId\n   * @param todo list of tasks to do\n   * @param done list of tasks done\n   * @returns status code 204 (no content)\n   */\n  updateTask(empId: number, todo: Item[], done: Item[]) {\n    return this.http.put('/api/employees/' + empId + '/tasks', {\n      todo,\n      done\n    })\n  }\n}\n"],"mappings":";;AAeA;AACA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExC;EACAC,QAAQA,CAACC,KAAa;IACpB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,iBAAiB,GAAGD,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC;EAC9D;EAEA;EACAE,OAAOA,CAACF,KAAa,EAAEG,IAAY;IACjC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,iBAAiB,GAAGJ,KAAK,GAAG,QAAQ,EAAE;MAAEG;IAAI,CAAE,CAAC,CAAC,CAAC;EACzE;EAEA;;;;;;EAMAE,UAAUA,CAACL,KAAa,EAAEM,MAAc;IACtCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGR,KAAK,GAAG,SAAS,GAAGM,MAAM,CAAC,EAAC;IAC5D,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,iBAAiB,GAAGT,KAAK,GAAG,SAAS,GAAGM,MAAM,CAAC,EAAC;EAC1E;EAEA;;;;;;;EAOAI,UAAUA,CAACV,KAAa,EAAEW,IAAY,EAAEC,IAAY;IAClD,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAC,iBAAiB,GAAGb,KAAK,GAAG,QAAQ,EAAE;MACzDW,IAAI;MACJC;KACD,CAAC;EACJ;EAAC,QAAAE,CAAA,G;qBArCUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAHV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}