{"ast":null,"code":"/**\n * Title: auth.guard.ts\n * Author: Jocelyn Dupuis\n * Date: 01/18/2023\n * Description: ts file for auth guard\n */\n//import statements\nimport { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n//exports and creates auth guard\nexport const authGuard = (route, state) => {\n  //cookie variable\n  const cookie = inject(CookieService); //inject CookieService\n  //user logged in if has an authentication cookie\n  if (cookie.get('session_user')) {\n    //if user has cookie a message displayed that they are logged in\n    console.log('You are logged in and have a valid session cookie set!');\n    return true;\n  } else {\n    //if user doesn't have an auth cookie a message is displayed that they must be logged in to view task management page\n    console.log('You must be logged in to access this page!');\n    //routes user to sign in page\n    const router = inject(Router);\n    router.navigate(['/security/signin'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false; //returns false\n  }\n};","map":{"version":3,"names":["inject","Router","CookieService","authGuard","route","state","cookie","get","console","log","router","navigate","queryParams","returnUrl","url"],"sources":["/Users/jocelynthegreat/Documents/buwebdev/nodebucket/src/app/shared/auth.guard.ts"],"sourcesContent":["/**\n * Title: auth.guard.ts\n * Author: Jocelyn Dupuis\n * Date: 01/18/2023\n * Description: ts file for auth guard\n */\n\n//import statements\nimport { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n//exports and creates auth guard\nexport const authGuard: CanActivateFn = (route, state) => {\n  //cookie variable\n  const cookie = inject(CookieService); //inject CookieService\n\n  //user logged in if has an authentication cookie\n  if (cookie.get('session_user')) {\n    //if user has cookie a message displayed that they are logged in\n    console.log('You are logged in and have a valid session cookie set!')\n    return true;\n  } else {\n    //if user doesn't have an auth cookie a message is displayed that they must be logged in to view task management page\n    console.log('You must be logged in to access this page!')\n    //routes user to sign in page\n    const router = inject(Router)\n    router.navigate(['/security/signin'], { queryParams: { returnUrl: state.url }})\n    return false; //returns false\n  }\n};\n"],"mappings":"AAAA;;;;;;AAOA;AACA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,aAAa,QAAQ,oBAAoB;AAElD;AACA,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD;EACA,MAAMC,MAAM,GAAGN,MAAM,CAACE,aAAa,CAAC,CAAC,CAAC;EAEtC;EACA,IAAII,MAAM,CAACC,GAAG,CAAC,cAAc,CAAC,EAAE;IAC9B;IACAC,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;IACrE,OAAO,IAAI;GACZ,MAAM;IACL;IACAD,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IACzD;IACA,MAAMC,MAAM,GAAGV,MAAM,CAACC,MAAM,CAAC;IAC7BS,MAAM,CAACC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAE;MAAEC,WAAW,EAAE;QAAEC,SAAS,EAAER,KAAK,CAACS;MAAG;IAAE,CAAC,CAAC;IAC/E,OAAO,KAAK,CAAC,CAAC;;AAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}