{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nimport * as i2 from \"../shared/task.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/cdk/drag-drop\";\nfunction TasksComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction TasksComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.successMessage, \" \");\n  }\n}\nfunction TasksComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 19)(2, \"strong\");\n    i0.ɵɵtext(3, \"Please enter a task!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"button\", 20);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TasksComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 19)(2, \"strong\");\n    i0.ɵɵtext(3, \"The task must be at least 3 characters long!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"button\", 20);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TasksComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 19)(2, \"strong\");\n    i0.ɵɵtext(3, \"The field must be at most 50 characters long!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"button\", 20);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TasksComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 21);\n    i0.ɵɵtext(2, \" No tasks to do yet! \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TasksComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"div\", 24)(3, \"div\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 24)(6, \"div\", 26)(7, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function TasksComponent_div_36_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const item_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.deleteTask(item_r11._id));\n    });\n    i0.ɵɵelementStart(8, \"span\", 9);\n    i0.ɵɵtext(9, \"delete\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(10, \"div\", 28)(11, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function TasksComponent_div_36_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const item_r11 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.deleteTask(item_r11._id));\n    });\n    i0.ɵɵtext(12, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", item_r11.text, \" \");\n  }\n}\nfunction TasksComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 21);\n    i0.ɵɵtext(2, \" No tasks done yet! \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TasksComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"div\", 24)(3, \"div\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 24)(6, \"div\", 26)(7, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function TasksComponent_div_44_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const item_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.deleteTask(item_r15._id));\n    });\n    i0.ɵɵelementStart(8, \"span\", 9);\n    i0.ɵɵtext(9, \"delete\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(10, \"div\", 28)(11, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function TasksComponent_div_44_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const item_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.deleteTask(item_r15._id));\n    });\n    i0.ɵɵtext(12, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r15 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", item_r15.text, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return [a0];\n};\n//exports TaskComponent\nexport class TasksComponent {\n  constructor(cookieService, taskService, fb) {\n    this.cookieService = cookieService;\n    this.taskService = taskService;\n    this.fb = fb;\n    this.newTaskForm = this.fb.group({\n      text: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(50)])]\n    });\n    this.employee = {};\n    this.todo = [];\n    this.done = [];\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.empId = parseInt(this.cookieService.get('session_user'), 10);\n    this.taskService.getTasks(this.empId).subscribe({\n      next: res => {\n        console.log('Employee', res);\n        this.employee = res;\n      },\n      error: err => {\n        console.error('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert(); //hide alert message\n      },\n\n      complete: () => {\n        this.employee.todo ? this.todo = this.employee.todo : this.todo = [];\n        this.employee.done ? this.done = this.employee.done : this.done = [];\n        console.log('todo', this.todo);\n        console.log('done', this.done);\n      }\n    });\n  }\n  //adds task\n  addTask() {\n    const text = this.newTaskForm.controls['text'].value;\n    this.taskService.addTask(this.empId, text).subscribe({\n      next: task => {\n        console.log('Task added with Id', task.id);\n        const newTask = {\n          _id: task.id,\n          text: text\n        };\n        this.todo.push(newTask); //Add task to todo list\n        this.newTaskForm.reset(); //reset form\n        this.successMessage = 'Task added successfully!';\n        this.hideAlert();\n      },\n      error: err => {\n        console.log('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert(); //hide alert message\n      }\n    });\n  }\n  //delete task\n  deleteTask(taskId) {\n    console.log(`Task item: ${taskId}`);\n    //confirm dialog\n    if (!confirm('Are you sure you want to delete this task?')) {\n      return;\n    }\n    //call the deleteTask() function on the taskService to subscribe to the observable and pass in the empId and taskId\n    this.taskService.deleteTask(this.empId, taskId).subscribe({\n      //if the task is deleted successfully, remove it from the task array\n      next: res => {\n        console.log('Task deleted with id, taskId');\n        if (!this.todo) this.todo = []; //if the todo array is null, set it to an empty array\n        if (!this.done) this.done = []; //if the done array is null, set it to an empty array\n        //we are doing this because we do not know if the task is in the todo or done array\n        this.todo = this.todo.filter(t => t._id.toString() !== taskId); //filter the array and remove the deleted task\n        this.done = this.done.filter(t => t._id.toString() !== taskId); //filter the array and remove the deleted task\n        this.successMessage = 'Task deleted successfully!'; //set the success message\n        this.hideAlert(); //call the hideAlert() function\n      },\n\n      //if there is an error, lof it to the console and set the error message\n      error: err => {\n        console.log('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert(); //calls the hideAlert() function\n      }\n    });\n  }\n  //drop event for the todo and done lists using the cdkDragDrop directive from the drag and drop module\n  drop(event) {\n    if (event.previousContainer === event.container) {\n      //if the item is dropped in the same container, move it to the new index\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      console.log('Moved item in array', event.container.data); //log the new array to the console\n      //call the updateTaskList() function and pass in the empId, todo and done arrays\n      this.updateTaskList(this.empId, this.todo, this.done);\n    } else {\n      //if the item is dropped in a different container, move it to the new container\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n      console.log('Moved item in array', event.container.data); //log the new array to the console\n      //call the updateTaskList() function and pass in the empId, todo and done arrays\n      this.updateTaskList(this.empId, this.todo, this.done);\n    }\n  }\n  //hides alert after 5 seconds\n  hideAlert() {\n    setTimeout(() => {\n      this.errorMessage = '';\n      this.successMessage = '';\n    }, 5000);\n  }\n  /**\n   * @description Updates the task list for the employee with the specified empId and passes in the todo and done arrays\n   * @param empId\n   * @param todo\n   * @param done\n   * @returns void\n  */\n  updateTaskList(empId, todo, done) {\n    this.taskService.updateTask(empId, todo, done).subscribe({\n      next: res => {\n        console.log('Task updated successfully');\n      },\n      error: err => {\n        console.log('error', err); //log the error message to the console\n        this.errorMessage = err.message; //set the error message\n        this.hideAlert(); //call the hideAlert() function\n      }\n    });\n  }\n  static #_ = this.ɵfac = function TasksComponent_Factory(t) {\n    return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.CookieService), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksComponent,\n    selectors: [[\"app-tasks\"]],\n    decls: 45,\n    vars: 19,\n    consts: [[1, \"container-fluid\", \"pt-2\", 2, \"min-height\", \"800px\"], [1, \"text-center\"], [1, \"row\", \"justify-content-center\", \"pt-4\"], [1, \"col-sm-10\", \"col-md-8\", \"col-lg-6\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"text\", \"placeholder\", \"Add new task\", 1, \"form-control\"], [\"type\", \"submit\", \"id\", \"btnAdd\", 1, \"btn\", \"btn-outline-secondary\", 3, \"disabled\"], [1, \"material-icons\"], [1, \"row\", \"gy-2\", \"justify-content-center\"], [1, \"col-sm-5\", \"col-md-5\", \"col-lg-3\"], [1, \"p-3\", \"border\", \"bg-light\"], [\"cdkDropList\", \"\", 1, \"container\", \"task-column\", 3, \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\"], [\"todoList\", \"cdkDropList\"], [\"cdkDrag\", \"\", \"class\", \"mt-2\", 4, \"ngFor\", \"ngForOf\"], [\"doneList\", \"cdkDropList\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", \"data-bs-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"alert\", \"alert-info\"], [\"cdkDrag\", \"\", 1, \"mt-2\"], [1, \"row\", \"border\", \"bg-white\"], [1, \"col-sm-6\"], [1, \"card-body\"], [1, \"card-body\", \"float-end\"], [1, \"btn\", 3, \"click\"], [1, \"col-12\", \"d-sm-none\", \"d-md-none\", \"d-lg-none\", \"d-xl-none\", \"d-grid\", \"gap-2\", \"p-2\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n    template: function TasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Welcome To Your Tasks!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5, \"Enter a task below to add it to your ToDo list.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7, \"When task is complete, drag-and-drop it in the Done column.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \"you realize you no longer need to complete a task - that's cool - just delete it!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11, \"Maybe you thought the task was complete but realized it wasn't - that's cool, too - just drag-and-drop it back in the ToDo column!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"main\")(13, \"div\", 2)(14, \"div\", 3);\n        i0.ɵɵtemplate(15, TasksComponent_div_15_Template, 3, 1, \"div\", 4);\n        i0.ɵɵtemplate(16, TasksComponent_div_16_Template, 3, 1, \"div\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 2)(18, \"div\", 3)(19, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function TasksComponent_Template_form_ngSubmit_19_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵelementStart(20, \"div\", 6);\n        i0.ɵɵelement(21, \"input\", 7);\n        i0.ɵɵelementStart(22, \"button\", 8)(23, \"span\", 9);\n        i0.ɵɵtext(24, \"add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(25, TasksComponent_div_25_Template, 5, 0, \"div\", 4);\n        i0.ɵɵtemplate(26, TasksComponent_div_26_Template, 5, 0, \"div\", 4);\n        i0.ɵɵtemplate(27, TasksComponent_div_27_Template, 5, 0, \"div\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"div\", 10)(29, \"div\", 11)(30, \"h4\", 1);\n        i0.ɵɵtext(31, \"ToDo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 12)(33, \"div\", 13, 14);\n        i0.ɵɵlistener(\"cdkDropListDropped\", function TasksComponent_Template_div_cdkDropListDropped_33_listener($event) {\n          return ctx.drop($event);\n        });\n        i0.ɵɵtemplate(35, TasksComponent_div_35_Template, 3, 0, \"div\", 4);\n        i0.ɵɵtemplate(36, TasksComponent_div_36_Template, 13, 1, \"div\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"div\", 11)(38, \"h4\", 1);\n        i0.ɵɵtext(39, \"Done\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 12)(41, \"div\", 13, 16);\n        i0.ɵɵlistener(\"cdkDropListDropped\", function TasksComponent_Template_div_cdkDropListDropped_41_listener($event) {\n          return ctx.drop($event);\n        });\n        i0.ɵɵtemplate(43, TasksComponent_div_43_Template, 3, 0, \"div\", 4);\n        i0.ɵɵtemplate(44, TasksComponent_div_44_Template, 13, 1, \"div\", 15);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        const _r5 = i0.ɵɵreference(34);\n        const _r8 = i0.ɵɵreference(42);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.newTaskForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.newTaskForm.valid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.newTaskForm.controls[\"text\"].touched && ctx.newTaskForm.controls[\"text\"].hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.newTaskForm.controls[\"text\"].touched && ctx.newTaskForm.controls[\"text\"].hasError(\"minlength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.newTaskForm.controls[\"text\"].touched && ctx.newTaskForm.controls[\"text\"].hasError(\"maxlength\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"cdkDropListData\", ctx.todo)(\"cdkDropListConnectedTo\", i0.ɵɵpureFunction1(15, _c0, _r8));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.todo.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.todo);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"cdkDropListData\", ctx.done)(\"cdkDropListConnectedTo\", i0.ɵɵpureFunction1(17, _c0, _r5));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.done.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.done);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i5.CdkDropList, i5.CdkDrag],\n    styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.container-fluid[_ngcontent-%COMP%] {\\n  background-color: #000000;\\n  height: 100%;\\n  width: 100%;\\n  margin-top: -1%;\\n  margin-bottom: -.5%;\\n}\\n\\n\\n\\nmain[_ngcontent-%COMP%] {\\n  background-image: url(\\\"/assets/background.jpeg\\\");\\n  border: 3px solid rgb(10, 171, 225);\\n  margin-right: 20%;\\n  margin-left: 20%;\\n  padding-bottom: 3%;\\n}\\n\\n\\n\\nh1[_ngcontent-%COMP%] {\\n  margin-top: 7%;\\n  margin-bottom: 2%;\\n  color: #946b2d;\\n}\\n\\n\\n\\nh4[_ngcontent-%COMP%] {\\n  color: white;\\n}\\n\\n\\n\\n\\n\\n#btnAdd[_ngcontent-%COMP%] {\\n  color: white;\\n  border: 2px solid white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvdGFza3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Q0FLQzs7QUFFRCw2QkFBNkI7QUFDN0I7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFdBQVc7RUFDWCxlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBLDJCQUEyQjtBQUMzQjtFQUNFLGdEQUFnRDtFQUNoRCxtQ0FBbUM7RUFDbkMsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEI7O0FBRUEsd0JBQXdCO0FBQ3hCO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBLHdCQUF3QjtBQUN4QjtFQUNFLFlBQVk7QUFDZDs7OztBQUlBLHlCQUF5QjtBQUN6QjtFQUNFLFlBQVk7RUFDWix1QkFBdUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbk5hbWU6IEpvY2VseW4gRHVwdWlzXG5GaWxlOiB0YXNrcy5jb21wb25lbnQuY3NzXG5EYXRlOiAwMS8yMS8yMDI0XG5EZXNjcmlwdGlvbjogQ1NTIGZpbGUgZm9yIHRhc2sgY29tcG9uZW50XG4qL1xuXG4vKnN0eWxpbmcgZm9yIG1haW4gY29udGFpbmVyKi9cbi5jb250YWluZXItZmx1aWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tdG9wOiAtMSU7XG4gIG1hcmdpbi1ib3R0b206IC0uNSU7XG59XG5cbi8qc3R5bGluZyBmb3IgbWFpbiBzZWN0aW9uKi9cbm1haW4ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvYXNzZXRzL2JhY2tncm91bmQuanBlZ1wiKTtcbiAgYm9yZGVyOiAzcHggc29saWQgcmdiKDEwLCAxNzEsIDIyNSk7XG4gIG1hcmdpbi1yaWdodDogMjAlO1xuICBtYXJnaW4tbGVmdDogMjAlO1xuICBwYWRkaW5nLWJvdHRvbTogMyU7XG59XG5cbi8qc3R5bGluZyBmb3IgaGVhZGluZyAxKi9cbmgxIHtcbiAgbWFyZ2luLXRvcDogNyU7XG4gIG1hcmdpbi1ib3R0b206IDIlO1xuICBjb2xvcjogIzk0NmIyZDtcbn1cblxuLypzdHlsaW5nIGZvciBoZWFkaW5nIDQqL1xuaDQge1xuICBjb2xvcjogd2hpdGU7XG59XG5cblxuXG4vKnN0eWxpbmcgZm9yIGFkZCBidXR0b24qL1xuI2J0bkFkZCB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","moveItemInArray","transferArrayItem","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","ctx_r1","successMessage","ɵɵelement","ɵɵlistener","TasksComponent_div_36_Template_button_click_7_listener","restoredCtx","ɵɵrestoreView","_r13","item_r11","$implicit","ctx_r12","ɵɵnextContext","ɵɵresetView","deleteTask","_id","TasksComponent_div_36_Template_button_click_11_listener","ctx_r14","text","TasksComponent_div_44_Template_button_click_7_listener","_r17","item_r15","ctx_r16","TasksComponent_div_44_Template_button_click_11_listener","ctx_r18","TasksComponent","constructor","cookieService","taskService","fb","newTaskForm","group","compose","required","minLength","maxLength","employee","todo","done","empId","parseInt","get","getTasks","subscribe","next","res","console","log","error","err","message","hideAlert","complete","addTask","controls","value","task","id","newTask","push","reset","taskId","confirm","filter","t","toString","drop","event","previousContainer","container","data","previousIndex","currentIndex","updateTaskList","setTimeout","updateTask","_","ɵɵdirectiveInject","i1","CookieService","i2","TaskService","i3","FormBuilder","_2","selectors","decls","vars","consts","template","TasksComponent_Template","rf","ctx","ɵɵtemplate","TasksComponent_div_15_Template","TasksComponent_div_16_Template","TasksComponent_Template_form_ngSubmit_19_listener","TasksComponent_div_25_Template","TasksComponent_div_26_Template","TasksComponent_div_27_Template","TasksComponent_Template_div_cdkDropListDropped_33_listener","$event","TasksComponent_div_35_Template","TasksComponent_div_36_Template","TasksComponent_Template_div_cdkDropListDropped_41_listener","TasksComponent_div_43_Template","TasksComponent_div_44_Template","ɵɵproperty","valid","touched","hasError","ɵɵpureFunction1","_c0","_r8","length","_r5"],"sources":["/Users/jocelynthegreat/Documents/buwebdev/nodebucket/src/app/tasks/tasks.component.ts","/Users/jocelynthegreat/Documents/buwebdev/nodebucket/src/app/tasks/tasks.component.html"],"sourcesContent":["/**\n * Title: task.component.ts\n * Author: Jocelyn Dupuis\n * Date: 01/18/2024\n * Description: ts file for task component\n */\n\n//import statements\nimport { Component } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { TaskService } from '../shared/task.service';\nimport { Employee } from '../shared/employee.interface';\nimport { Item } from '../shared/item.interface';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\n//exports TaskComponent\nexport class TasksComponent {\n  employee: Employee;\n  empId: number;\n  todo: Item[];\n  done: Item[];\n  errorMessage: string;\n  successMessage: string;\n\n  newTaskForm: FormGroup = this.fb.group({\n    text: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(50)])]\n  });\n\n  constructor(private cookieService: CookieService, private taskService: TaskService, private fb: FormBuilder) {\n    this.employee = {} as Employee;\n    this.todo = [];\n    this.done = [];\n    this.errorMessage = '';\n    this.successMessage = '';\n\n    this.empId = parseInt(this.cookieService.get('session_user'), 10);\n\n    this.taskService.getTasks(this.empId).subscribe({\n      next: (res: any) => {\n        console.log('Employee', res);\n        this.employee = res;\n      },\n      error: (err) => {\n        console.error('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert(); //hide alert message\n      },\n      complete: () => {\n        this.employee.todo ? this.todo = this.employee.todo : this.todo = [];\n        this.employee.done ? this.done = this.employee.done : this.done = [];\n\n        console.log('todo', this.todo);\n        console.log('done', this.done);\n\n      }\n    })\n  }\n\n  //adds task\n  addTask() {\n    const text = this.newTaskForm.controls['text'].value;\n\n    this.taskService.addTask(this.empId, text).subscribe({\n      next: (task: any) => {\n        console.log('Task added with Id', task.id);\n        const newTask = {\n          _id: task.id,\n          text: text\n        }\n\n        this.todo.push(newTask); //Add task to todo list\n        this.newTaskForm.reset(); //reset form\n\n        this.successMessage = 'Task added successfully!';\n\n        this.hideAlert();\n      },\n      error: (err) => {\n        console.log('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert(); //hide alert message\n      }\n    });\n  }\n\n  //delete task\n  deleteTask(taskId: string) {\n    console.log(`Task item: ${taskId}`)\n\n    //confirm dialog\n    if (!confirm('Are you sure you want to delete this task?')) {\n      return;\n    }\n\n    //call the deleteTask() function on the taskService to subscribe to the observable and pass in the empId and taskId\n    this.taskService.deleteTask(this.empId, taskId).subscribe({\n      //if the task is deleted successfully, remove it from the task array\n      next: (res: any) => {\n        console.log('Task deleted with id, taskId')\n\n        if (!this.todo) this.todo = [] //if the todo array is null, set it to an empty array\n        if (!this.done) this.done = [] //if the done array is null, set it to an empty array\n\n        //we are doing this because we do not know if the task is in the todo or done array\n        this.todo = this.todo.filter(t => t._id.toString() !== taskId) //filter the array and remove the deleted task\n        this.done = this.done.filter(t => t._id.toString() !== taskId) //filter the array and remove the deleted task\n\n        this.successMessage = 'Task deleted successfully!' //set the success message\n\n        this.hideAlert() //call the hideAlert() function\n      },\n      //if there is an error, lof it to the console and set the error message\n      error: (err) => {\n        console.log('error', err)\n        this.errorMessage = err.message\n\n        this.hideAlert() //calls the hideAlert() function\n      }\n    })\n  }\n\n  //drop event for the todo and done lists using the cdkDragDrop directive from the drag and drop module\n  drop(event: CdkDragDrop<any[]>) {\n    if (event.previousContainer === event.container) {\n      //if the item is dropped in the same container, move it to the new index\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex)\n\n      console.log('Moved item in array', event.container.data) //log the new array to the console\n\n      //call the updateTaskList() function and pass in the empId, todo and done arrays\n      this.updateTaskList(this.empId, this.todo, this.done)\n    } else {\n      //if the item is dropped in a different container, move it to the new container\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      )\n\n      console.log('Moved item in array', event.container.data) //log the new array to the console\n\n      //call the updateTaskList() function and pass in the empId, todo and done arrays\n      this.updateTaskList(this.empId, this.todo, this.done)\n    }\n  }\n\n  //hides alert after 5 seconds\n  hideAlert() {\n    setTimeout(() => {\n      this.errorMessage = '';\n      this.successMessage = '';\n    }, 5000)\n  }\n\n  /**\n   * @description Updates the task list for the employee with the specified empId and passes in the todo and done arrays\n   * @param empId\n   * @param todo\n   * @param done\n   * @returns void\n  */\n\n  updateTaskList(empId: number, todo: Item[], done: Item[]) {\n    this.taskService.updateTask(empId, todo, done).subscribe({\n      next: (res: any) => {\n        console.log('Task updated successfully')\n      },\n      error: (err) => {\n        console.log('error', err) //log the error message to the console\n        this.errorMessage = err.message //set the error message\n        this.hideAlert() //call the hideAlert() function\n      }\n    })\n  }\n}\n","<!--Name: Jocelyn Dupuis -->\n<!--File: task.component.html -->\n<!--Date: 01/25/2023-->\n<!--Description: HTML file for task component-->\n\n<div class=\"container-fluid pt-2\" style=\"min-height: 800px;\">\n  <h1 class=\"text-center\">Welcome To Your Tasks!</h1>\n  <br>\n  <p>Enter a task below to add it to your ToDo list.</p>\n  <p>When task is complete, drag-and-drop it in the Done column.</p>\n  <p>you realize you no longer need to complete a task - that's cool - just delete it!</p>\n  <p>Maybe you thought the task was complete but realized it wasn't - that's cool, too - just drag-and-drop it back in the ToDo column!</p>\n\n<main>\n  <!--error and success messages-->\n  <div class=\"row justify-content-center pt-4\">\n    <div class=\"col-sm-10 col-md-8 col-lg-6\">\n\n      <div *ngIf=\"errorMessage\">\n        <div class=\"alert alert-danger\" role=\"alert\">\n          {{ errorMessage  }}\n        </div>\n      </div>\n\n      <div *ngIf=\"successMessage\">\n        <div class=\"alert alert-success\" role=\"alert\">\n          {{ successMessage }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!--new task input field-->\n\n<div class=\"row justify-content-center pt-4\">\n  <div class=\"col-sm-10 col-md-8 col-lg-6\">\n    <form [formGroup]=\"newTaskForm\" (ngSubmit)=\"addTask();\">\n      <div class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" formControlName=\"text\" placeholder=\"Add new task\">\n        <button class=\"btn btn-outline-secondary\" type=\"submit\" [disabled]=\"!newTaskForm.valid\" id=\"btnAdd\"><span class=\"material-icons\">add</span></button>\n      </div>\n\n      <!--validation required field-->\n      <div *ngIf=\"newTaskForm.controls['text'].touched && newTaskForm.controls['text'].hasError('required')\">\n        <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n          <strong>Please enter a task!</strong>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n        </div>\n      </div>\n\n      <!--validation min field -->\n      <div *ngIf=\"newTaskForm.controls['text'].touched && newTaskForm.controls['text'].hasError('minlength')\">\n        <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n          <strong>The task must be at least 3 characters long!</strong>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n        </div>\n      </div>\n\n      <!--validation max field-->\n      <div *ngIf=\"newTaskForm.controls['text'].touched && newTaskForm.controls['text'].hasError('maxlength')\">\n        <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n          <strong>The field must be at most 50 characters long!</strong>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n        </div>\n      </div>\n    </form>\n\n  </div>\n</div>\n\n\n  <!-- to do and done container-->\n  <div class=\"row gy-2 justify-content-center\">\n\n    <!--to do column-->\n    <div class=\"col-sm-5 col-md-5 col-lg-3\">\n      <h4 class=\"text-center\">ToDo</h4>\n\n      <div class=\"p-3 border bg-light\">\n\n        <div class=\"container task-column\"\n        cdkDropList\n        #todoList=\"cdkDropList\"\n        [cdkDropListData]=\"todo\"\n        [cdkDropListConnectedTo]=\"[doneList]\"\n        (cdkDropListDropped)=\"drop($event)\">\n\n          <div *ngIf=\"todo.length === 0\">\n            <div class=\"alert alert-info\">\n              No tasks to do yet!\n            </div>\n          </div>\n\n          <div *ngFor=\"let item of todo\" cdkDrag class=\"mt-2\">\n            <div class=\"row border bg-white\">\n\n              <!--column 1 of task item-->\n              <div class=\"col-sm-6\">\n                <div class=\"card-body\">\n                  {{ item.text }}\n                </div>\n              </div>\n              <!-- end of column 1-->\n\n              <!--column 2 of task item-->\n              <div class=\"col-sm-6\">\n                <div class=\"card-body float-end\">\n                  <button (click)=\"deleteTask(item._id)\" class=\"btn\">\n                    <span class=\"material-icons\">delete</span>\n                  </button>\n                </div>\n              </div>\n\n              <div class=\"col-12 d-sm-none d-md-none d-lg-none d-xl-none d-grid gap-2 p-2\">\n                <button (click)=\"deleteTask(item._id)\" class=\"btn btn-secondary\">Delete</button>\n              </div>\n              <!--end column 2-->\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n    <!--end todo column-->\n\n    <!--done column-->\n    <div class=\"col-sm-5 col-md-5 col-lg-3\">\n      <h4 class=\"text-center\">Done</h4>\n\n      <div class=\"p-3 border bg-light\">\n\n        <div class=\"container task-column\"\n        cdkDropList\n        #doneList=\"cdkDropList\"\n        [cdkDropListData]=\"done\"\n        [cdkDropListConnectedTo]=\"[todoList]\"\n        (cdkDropListDropped)=\"drop($event)\">\n\n          <div *ngIf=\"done.length === 0\">\n            <div class=\"alert alert-info\">\n              No tasks done yet!\n            </div>\n          </div>\n\n          <div *ngFor=\"let item of done\" cdkDrag class=\"mt-2\">\n            <div class=\"row border bg-white\">\n\n              <!--column 1 of task item-->\n              <div class=\"col-sm-6\">\n                <div class=\"card-body\">\n                  {{ item.text }}\n                </div>\n              </div>\n              <!-- end of column 1-->\n\n              <!--column 2 of task item-->\n              <div class=\"col-sm-6\">\n                <div class=\"card-body float-end\">\n                  <button (click)=\"deleteTask(item._id)\" class=\"btn\">\n                    <span class=\"material-icons\">delete</span>\n                  </button>\n                </div>\n              </div>\n\n              <div class=\"col-12 d-sm-none d-md-none d-lg-none d-xl-none d-grid gap-2 p-2\">\n                <button (click)=\"deleteTask(item._id)\" class=\"btn btn-secondary\">Delete</button>\n              </div>\n              <!--end column 2-->\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n    <!--end done column-->\n  </div>\n</main>\n</div>\n\n\n"],"mappings":"AAaA,SAAiCA,UAAU,QAAQ,gBAAgB;AACnE,SAAsBC,eAAe,EAAEC,iBAAiB,QAAQ,wBAAwB;;;;;;;;;ICIlFC,EAAA,CAAAC,cAAA,UAA0B;IAEtBD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,YAAA,MACF;;;;;IAGFP,EAAA,CAAAC,cAAA,UAA4B;IAExBD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAG,MAAA,CAAAC,cAAA,MACF;;;;;IAgBFT,EAAA,CAAAC,cAAA,UAAuG;IAE3FD,EAAA,CAAAE,MAAA,2BAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACrCH,EAAA,CAAAU,SAAA,iBAA4F;IAC9FV,EAAA,CAAAG,YAAA,EAAM;;;;;IAIRH,EAAA,CAAAC,cAAA,UAAwG;IAE5FD,EAAA,CAAAE,MAAA,mDAA4C;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAC7DH,EAAA,CAAAU,SAAA,iBAA4F;IAC9FV,EAAA,CAAAG,YAAA,EAAM;;;;;IAIRH,EAAA,CAAAC,cAAA,UAAwG;IAE5FD,EAAA,CAAAE,MAAA,oDAA6C;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAC9DH,EAAA,CAAAU,SAAA,iBAA4F;IAC9FV,EAAA,CAAAG,YAAA,EAAM;;;;;IAwBJH,EAAA,CAAAC,cAAA,UAA+B;IAE3BD,EAAA,CAAAE,MAAA,4BACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;;IAGRH,EAAA,CAAAC,cAAA,cAAoD;IAM5CD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAKRH,EAAA,CAAAC,cAAA,cAAsB;IAEVD,EAAA,CAAAW,UAAA,mBAAAC,uDAAA;MAAA,MAAAC,WAAA,GAAAb,EAAA,CAAAc,aAAA,CAAAC,IAAA;MAAA,MAAAC,QAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,OAAA,GAAAlB,EAAA,CAAAmB,aAAA;MAAA,OAASnB,EAAA,CAAAoB,WAAA,CAAAF,OAAA,CAAAG,UAAA,CAAAL,QAAA,CAAAM,GAAA,CAAoB;IAAA,EAAC;IACpCtB,EAAA,CAAAC,cAAA,cAA6B;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAKhDH,EAAA,CAAAC,cAAA,eAA6E;IACnED,EAAA,CAAAW,UAAA,mBAAAY,wDAAA;MAAA,MAAAV,WAAA,GAAAb,EAAA,CAAAc,aAAA,CAAAC,IAAA;MAAA,MAAAC,QAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAO,OAAA,GAAAxB,EAAA,CAAAmB,aAAA;MAAA,OAASnB,EAAA,CAAAoB,WAAA,CAAAI,OAAA,CAAAH,UAAA,CAAAL,QAAA,CAAAM,GAAA,CAAoB;IAAA,EAAC;IAA2BtB,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAf9EH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAW,QAAA,CAAAS,IAAA,MACF;;;;;IAsCNzB,EAAA,CAAAC,cAAA,UAA+B;IAE3BD,EAAA,CAAAE,MAAA,2BACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;;IAGRH,EAAA,CAAAC,cAAA,cAAoD;IAM5CD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAKRH,EAAA,CAAAC,cAAA,cAAsB;IAEVD,EAAA,CAAAW,UAAA,mBAAAe,uDAAA;MAAA,MAAAb,WAAA,GAAAb,EAAA,CAAAc,aAAA,CAAAa,IAAA;MAAA,MAAAC,QAAA,GAAAf,WAAA,CAAAI,SAAA;MAAA,MAAAY,OAAA,GAAA7B,EAAA,CAAAmB,aAAA;MAAA,OAASnB,EAAA,CAAAoB,WAAA,CAAAS,OAAA,CAAAR,UAAA,CAAAO,QAAA,CAAAN,GAAA,CAAoB;IAAA,EAAC;IACpCtB,EAAA,CAAAC,cAAA,cAA6B;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAKhDH,EAAA,CAAAC,cAAA,eAA6E;IACnED,EAAA,CAAAW,UAAA,mBAAAmB,wDAAA;MAAA,MAAAjB,WAAA,GAAAb,EAAA,CAAAc,aAAA,CAAAa,IAAA;MAAA,MAAAC,QAAA,GAAAf,WAAA,CAAAI,SAAA;MAAA,MAAAc,OAAA,GAAA/B,EAAA,CAAAmB,aAAA;MAAA,OAASnB,EAAA,CAAAoB,WAAA,CAAAW,OAAA,CAAAV,UAAA,CAAAO,QAAA,CAAAN,GAAA,CAAoB;IAAA,EAAC;IAA2BtB,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAf9EH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAuB,QAAA,CAAAH,IAAA,MACF;;;;;;ADlIhB;AACA,OAAM,MAAOO,cAAc;EAYzBC,YAAoBC,aAA4B,EAAUC,WAAwB,EAAUC,EAAe;IAAvF,KAAAF,aAAa,GAAbA,aAAa;IAAyB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,EAAE,GAAFA,EAAE;IAJ9F,KAAAC,WAAW,GAAc,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACrCb,IAAI,EAAE,CAAC,IAAI,EAAE5B,UAAU,CAAC0C,OAAO,CAAC,CAAC1C,UAAU,CAAC2C,QAAQ,EAAE3C,UAAU,CAAC4C,SAAS,CAAC,CAAC,CAAC,EAAE5C,UAAU,CAAC6C,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;KAC1G,CAAC;IAGA,IAAI,CAACC,QAAQ,GAAG,EAAc;IAC9B,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACtC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACE,cAAc,GAAG,EAAE;IAExB,IAAI,CAACqC,KAAK,GAAGC,QAAQ,CAAC,IAAI,CAACb,aAAa,CAACc,GAAG,CAAC,cAAc,CAAC,EAAE,EAAE,CAAC;IAEjE,IAAI,CAACb,WAAW,CAACc,QAAQ,CAAC,IAAI,CAACH,KAAK,CAAC,CAACI,SAAS,CAAC;MAC9CC,IAAI,EAAGC,GAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAAC;QAC5B,IAAI,CAACT,QAAQ,GAAGS,GAAG;MACrB,CAAC;MACDG,KAAK,EAAGC,GAAG,IAAI;QACbH,OAAO,CAACE,KAAK,CAAC,OAAO,EAAEC,GAAG,CAAC;QAC3B,IAAI,CAACjD,YAAY,GAAGiD,GAAG,CAACC,OAAO;QAC/B,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;MACpB,CAAC;;MACDC,QAAQ,EAAEA,CAAA,KAAK;QACb,IAAI,CAAChB,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI,CAACD,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,EAAE;QACpE,IAAI,CAACD,QAAQ,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI,CAACF,QAAQ,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,EAAE;QAEpEQ,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACV,IAAI,CAAC;QAC9BS,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACT,IAAI,CAAC;MAEhC;KACD,CAAC;EACJ;EAEA;EACAe,OAAOA,CAAA;IACL,MAAMnC,IAAI,GAAG,IAAI,CAACY,WAAW,CAACwB,QAAQ,CAAC,MAAM,CAAC,CAACC,KAAK;IAEpD,IAAI,CAAC3B,WAAW,CAACyB,OAAO,CAAC,IAAI,CAACd,KAAK,EAAErB,IAAI,CAAC,CAACyB,SAAS,CAAC;MACnDC,IAAI,EAAGY,IAAS,IAAI;QAClBV,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAES,IAAI,CAACC,EAAE,CAAC;QAC1C,MAAMC,OAAO,GAAG;UACd3C,GAAG,EAAEyC,IAAI,CAACC,EAAE;UACZvC,IAAI,EAAEA;SACP;QAED,IAAI,CAACmB,IAAI,CAACsB,IAAI,CAACD,OAAO,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC5B,WAAW,CAAC8B,KAAK,EAAE,CAAC,CAAC;QAE1B,IAAI,CAAC1D,cAAc,GAAG,0BAA0B;QAEhD,IAAI,CAACiD,SAAS,EAAE;MAClB,CAAC;MACDH,KAAK,EAAGC,GAAG,IAAI;QACbH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,GAAG,CAAC;QACzB,IAAI,CAACjD,YAAY,GAAGiD,GAAG,CAACC,OAAO;QAC/B,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;MACpB;KACD,CAAC;EACJ;EAEA;EACArC,UAAUA,CAAC+C,MAAc;IACvBf,OAAO,CAACC,GAAG,CAAC,cAAcc,MAAM,EAAE,CAAC;IAEnC;IACA,IAAI,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MAC1D;;IAGF;IACA,IAAI,CAAClC,WAAW,CAACd,UAAU,CAAC,IAAI,CAACyB,KAAK,EAAEsB,MAAM,CAAC,CAAClB,SAAS,CAAC;MACxD;MACAC,IAAI,EAAGC,GAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAE3C,IAAI,CAAC,IAAI,CAACV,IAAI,EAAE,IAAI,CAACA,IAAI,GAAG,EAAE,EAAC;QAC/B,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAACA,IAAI,GAAG,EAAE,EAAC;QAE/B;QACA,IAAI,CAACD,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC0B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACjD,GAAG,CAACkD,QAAQ,EAAE,KAAKJ,MAAM,CAAC,EAAC;QAC/D,IAAI,CAACvB,IAAI,GAAG,IAAI,CAACA,IAAI,CAACyB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACjD,GAAG,CAACkD,QAAQ,EAAE,KAAKJ,MAAM,CAAC,EAAC;QAE/D,IAAI,CAAC3D,cAAc,GAAG,4BAA4B,EAAC;QAEnD,IAAI,CAACiD,SAAS,EAAE,EAAC;MACnB,CAAC;;MACD;MACAH,KAAK,EAAGC,GAAG,IAAI;QACbH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,GAAG,CAAC;QACzB,IAAI,CAACjD,YAAY,GAAGiD,GAAG,CAACC,OAAO;QAE/B,IAAI,CAACC,SAAS,EAAE,EAAC;MACnB;KACD,CAAC;EACJ;EAEA;EACAe,IAAIA,CAACC,KAAyB;IAC5B,IAAIA,KAAK,CAACC,iBAAiB,KAAKD,KAAK,CAACE,SAAS,EAAE;MAC/C;MACA9E,eAAe,CAAC4E,KAAK,CAACE,SAAS,CAACC,IAAI,EAAEH,KAAK,CAACI,aAAa,EAAEJ,KAAK,CAACK,YAAY,CAAC;MAE9E1B,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEoB,KAAK,CAACE,SAAS,CAACC,IAAI,CAAC,EAAC;MAEzD;MACA,IAAI,CAACG,cAAc,CAAC,IAAI,CAAClC,KAAK,EAAE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACC,IAAI,CAAC;KACtD,MAAM;MACL;MACA9C,iBAAiB,CACf2E,KAAK,CAACC,iBAAiB,CAACE,IAAI,EAC5BH,KAAK,CAACE,SAAS,CAACC,IAAI,EACpBH,KAAK,CAACI,aAAa,EACnBJ,KAAK,CAACK,YAAY,CACnB;MAED1B,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEoB,KAAK,CAACE,SAAS,CAACC,IAAI,CAAC,EAAC;MAEzD;MACA,IAAI,CAACG,cAAc,CAAC,IAAI,CAAClC,KAAK,EAAE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACC,IAAI,CAAC;;EAEzD;EAEA;EACAa,SAASA,CAAA;IACPuB,UAAU,CAAC,MAAK;MACd,IAAI,CAAC1E,YAAY,GAAG,EAAE;MACtB,IAAI,CAACE,cAAc,GAAG,EAAE;IAC1B,CAAC,EAAE,IAAI,CAAC;EACV;EAEA;;;;;;;EAQAuE,cAAcA,CAAClC,KAAa,EAAEF,IAAY,EAAEC,IAAY;IACtD,IAAI,CAACV,WAAW,CAAC+C,UAAU,CAACpC,KAAK,EAAEF,IAAI,EAAEC,IAAI,CAAC,CAACK,SAAS,CAAC;MACvDC,IAAI,EAAGC,GAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,GAAG,CAAC,EAAC;QAC1B,IAAI,CAACjD,YAAY,GAAGiD,GAAG,CAACC,OAAO,EAAC;QAChC,IAAI,CAACC,SAAS,EAAE,EAAC;MACnB;KACD,CAAC;EACJ;EAAC,QAAAyB,CAAA,G;qBA9JUnD,cAAc,EAAAhC,EAAA,CAAAoF,iBAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAtF,EAAA,CAAAoF,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAxF,EAAA,CAAAoF,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAd3D,cAAc;IAAA4D,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCjB3BlG,EAAA,CAAAC,cAAA,aAA6D;QACnCD,EAAA,CAAAE,MAAA,6BAAsB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACnDH,EAAA,CAAAU,SAAA,SAAI;QACJV,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,sDAA+C;QAAAF,EAAA,CAAAG,YAAA,EAAI;QACtDH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,kEAA2D;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAClEH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,wFAAiF;QAAAF,EAAA,CAAAG,YAAA,EAAI;QACxFH,EAAA,CAAAC,cAAA,SAAG;QAAAD,EAAA,CAAAE,MAAA,0IAAkI;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAE3IH,EAAA,CAAAC,cAAA,YAAM;QAKAD,EAAA,CAAAoG,UAAA,KAAAC,8BAAA,iBAIM;QAENrG,EAAA,CAAAoG,UAAA,KAAAE,8BAAA,iBAIM;QACRtG,EAAA,CAAAG,YAAA,EAAM;QAKVH,EAAA,CAAAC,cAAA,cAA6C;QAETD,EAAA,CAAAW,UAAA,sBAAA4F,kDAAA;UAAA,OAAYJ,GAAA,CAAAvC,OAAA,EAAS;QAAA,EAAE;QACrD5D,EAAA,CAAAC,cAAA,cAA8B;QAC5BD,EAAA,CAAAU,SAAA,gBAA0F;QAC1FV,EAAA,CAAAC,cAAA,iBAAoG;QAA6BD,EAAA,CAAAE,MAAA,WAAG;QAAAF,EAAA,CAAAG,YAAA,EAAO;QAI7IH,EAAA,CAAAoG,UAAA,KAAAI,8BAAA,iBAKM;QAGNxG,EAAA,CAAAoG,UAAA,KAAAK,8BAAA,iBAKM;QAGNzG,EAAA,CAAAoG,UAAA,KAAAM,8BAAA,iBAKM;QACR1G,EAAA,CAAAG,YAAA,EAAO;QAOTH,EAAA,CAAAC,cAAA,eAA6C;QAIjBD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAEjCH,EAAA,CAAAC,cAAA,eAAiC;QAO/BD,EAAA,CAAAW,UAAA,gCAAAgG,2DAAAC,MAAA;UAAA,OAAsBT,GAAA,CAAA1B,IAAA,CAAAmC,MAAA,CAAY;QAAA,EAAC;QAEjC5G,EAAA,CAAAoG,UAAA,KAAAS,8BAAA,iBAIM;QAEN7G,EAAA,CAAAoG,UAAA,KAAAU,8BAAA,mBAyBM;QAER9G,EAAA,CAAAG,YAAA,EAAM;QAMVH,EAAA,CAAAC,cAAA,eAAwC;QACdD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAEjCH,EAAA,CAAAC,cAAA,eAAiC;QAO/BD,EAAA,CAAAW,UAAA,gCAAAoG,2DAAAH,MAAA;UAAA,OAAsBT,GAAA,CAAA1B,IAAA,CAAAmC,MAAA,CAAY;QAAA,EAAC;QAEjC5G,EAAA,CAAAoG,UAAA,KAAAY,8BAAA,iBAIM;QAENhH,EAAA,CAAAoG,UAAA,KAAAa,8BAAA,mBAyBM;QAERjH,EAAA,CAAAG,YAAA,EAAM;;;;;QAzJFH,EAAA,CAAAI,SAAA,IAAkB;QAAlBJ,EAAA,CAAAkH,UAAA,SAAAf,GAAA,CAAA5F,YAAA,CAAkB;QAMlBP,EAAA,CAAAI,SAAA,GAAoB;QAApBJ,EAAA,CAAAkH,UAAA,SAAAf,GAAA,CAAA1F,cAAA,CAAoB;QAYtBT,EAAA,CAAAI,SAAA,GAAyB;QAAzBJ,EAAA,CAAAkH,UAAA,cAAAf,GAAA,CAAA9D,WAAA,CAAyB;QAG6BrC,EAAA,CAAAI,SAAA,GAA+B;QAA/BJ,EAAA,CAAAkH,UAAA,cAAAf,GAAA,CAAA9D,WAAA,CAAA8E,KAAA,CAA+B;QAInFnH,EAAA,CAAAI,SAAA,GAA+F;QAA/FJ,EAAA,CAAAkH,UAAA,SAAAf,GAAA,CAAA9D,WAAA,CAAAwB,QAAA,SAAAuD,OAAA,IAAAjB,GAAA,CAAA9D,WAAA,CAAAwB,QAAA,SAAAwD,QAAA,aAA+F;QAQ/FrH,EAAA,CAAAI,SAAA,GAAgG;QAAhGJ,EAAA,CAAAkH,UAAA,SAAAf,GAAA,CAAA9D,WAAA,CAAAwB,QAAA,SAAAuD,OAAA,IAAAjB,GAAA,CAAA9D,WAAA,CAAAwB,QAAA,SAAAwD,QAAA,cAAgG;QAQhGrH,EAAA,CAAAI,SAAA,GAAgG;QAAhGJ,EAAA,CAAAkH,UAAA,SAAAf,GAAA,CAAA9D,WAAA,CAAAwB,QAAA,SAAAuD,OAAA,IAAAjB,GAAA,CAAA9D,WAAA,CAAAwB,QAAA,SAAAwD,QAAA,cAAgG;QAwBpGrH,EAAA,CAAAI,SAAA,GAAwB;QAAxBJ,EAAA,CAAAkH,UAAA,oBAAAf,GAAA,CAAAvD,IAAA,CAAwB,2BAAA5C,EAAA,CAAAsH,eAAA,KAAAC,GAAA,EAAAC,GAAA;QAIhBxH,EAAA,CAAAI,SAAA,GAAuB;QAAvBJ,EAAA,CAAAkH,UAAA,SAAAf,GAAA,CAAAvD,IAAA,CAAA6E,MAAA,OAAuB;QAMPzH,EAAA,CAAAI,SAAA,GAAO;QAAPJ,EAAA,CAAAkH,UAAA,YAAAf,GAAA,CAAAvD,IAAA,CAAO;QAyC/B5C,EAAA,CAAAI,SAAA,GAAwB;QAAxBJ,EAAA,CAAAkH,UAAA,oBAAAf,GAAA,CAAAtD,IAAA,CAAwB,2BAAA7C,EAAA,CAAAsH,eAAA,KAAAC,GAAA,EAAAG,GAAA;QAIhB1H,EAAA,CAAAI,SAAA,GAAuB;QAAvBJ,EAAA,CAAAkH,UAAA,SAAAf,GAAA,CAAAtD,IAAA,CAAA4E,MAAA,OAAuB;QAMPzH,EAAA,CAAAI,SAAA,GAAO;QAAPJ,EAAA,CAAAkH,UAAA,YAAAf,GAAA,CAAAtD,IAAA,CAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}