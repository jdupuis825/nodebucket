{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"../security.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction SigninComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction SigninComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Sign In\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SigninComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n}\n//signin component\nexport let SigninComponent = /*#__PURE__*/(() => {\n  class SigninComponent {\n    //constructor created that passes the following\n    constructor(route, router, cookieService, securityService, fb) {\n      this.route = route;\n      this.router = router;\n      this.cookieService = cookieService;\n      this.securityService = securityService;\n      this.fb = fb;\n      this.isLoading = false;\n      //form builder creates signin form that and accepts numerical values\n      this.signinForm = this.fb.group({\n        empId: [null, Validators.compose([Validators.required, Validators.pattern('^[0-9]*$')])]\n      });\n      this.sessionUser = {}; //default value set\n      this.errorMessage = ''; //default value set\n    }\n    //function for user to signin\n    signin() {\n      //set isLoading to true and get Id from form\n      this.isLoading = true;\n      console.log(\"signinForm\", this.signinForm.value);\n      const empId = this.signinForm.controls['empId'].value;\n      //if ID is not valid an error message is displayed\n      if (!empId || isNaN(parseInt(empId, 10))) {\n        this.errorMessage = 'The employee ID is invalid. Please enter a number.';\n        this.isLoading = false;\n        return;\n      }\n      //subscribe to security service\n      this.securityService.findEmployeeById(empId).subscribe({\n        next: employee => {\n          console.log('employee', employee);\n          //session user to the logged employee\n          this.sessionUser = employee;\n          //gives user two session cookies to name and Id\n          this.cookieService.set('session_user', empId, 1);\n          this.cookieService.set('session_name', `${employee.firstName} ${employee.lastName}`, 1);\n          //returns url\n          const returnUrl = this.route.snapshot.queryParamMap.get('returnUrl') || '/';\n          this.isLoading = false;\n          this.router.navigate([returnUrl]);\n        },\n        error: err => {\n          this.isLoading = false;\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n            return;\n          }\n          //sets value of error message\n          this.errorMessage = err.message;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function SigninComponent_Factory(t) {\n      return new (t || SigninComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CookieService), i0.ɵɵdirectiveInject(i3.SecurityService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SigninComponent,\n      selectors: [[\"app-signin\"]],\n      decls: 21,\n      vars: 4,\n      consts: [[1, \"container-fluid\", \"bg-dark\", 2, \"min-height\", \"900px\"], [1, \"signin-container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-lg-3\", \"col-md-6\", \"col-sm-6\"], [1, \"card\", \"shadow\"], [1, \"card-title\", \"text-center\", \"border-bottom\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\"], [\"for\", \"empId\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"empId\", \"formControlName\", \"empId\", 1, \"form-control\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\"], [4, \"ngIf\"], [\"routerLink\", \"/\", 1, \"text-underline-hover\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"]],\n      template: function SigninComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h2\");\n          i0.ɵɵtext(7, \"Employee Sign In\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(8, SigninComponent_div_8_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementStart(9, \"div\", 7)(10, \"form\", 8);\n          i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_Template_form_ngSubmit_10_listener() {\n            ctx.signin();\n            return ctx.signinForm.reset();\n          });\n          i0.ɵɵelementStart(11, \"div\", 9)(12, \"label\", 10);\n          i0.ɵɵtext(13, \"Employee ID:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 12)(16, \"button\", 13);\n          i0.ɵɵtemplate(17, SigninComponent_span_17_Template, 2, 0, \"span\", 14);\n          i0.ɵɵtemplate(18, SigninComponent_div_18_Template, 2, 0, \"div\", 14);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(19, \"a\", 15);\n          i0.ɵɵtext(20, \"Return\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.signinForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [i5.NgIf, i1.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n      styles: [\".container-fluid[_ngcontent-%COMP%]{background-image:url(/assets/ravenclaw-signin-page.jpeg);background-repeat:no-repeat;background-position:center center;background-color:#000}.btn[_ngcontent-%COMP%]{color:#000;background-color:#946b2d;border:2px solid white}.text-underline-hover[_ngcontent-%COMP%]{color:#fff}\"]\n    });\n  }\n  return SigninComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}