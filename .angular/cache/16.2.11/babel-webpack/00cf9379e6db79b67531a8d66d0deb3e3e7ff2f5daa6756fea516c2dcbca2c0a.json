{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n  }\n  //getTasks\n  getTasks(empId) {\n    return this.http.get('/api/employees/' + empId + '/tasks'); //http://localhost:3000/api/employees/1/tasks\n  }\n  //createTask\n  addTask(empId, text) {\n    return this.http.post('/api/employees/' + empId + '/tasks', {\n      text\n    }); //http://localhost:3000/api/employees/1/tasks\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TaskService","constructor","http","getTasks","empId","get","addTask","text","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/jocelynthegreat/Documents/buwebdev/nodebucket/src/app/shared/task.service.ts"],"sourcesContent":["\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient) { }\n\n  //getTasks\n  getTasks(empId: number) {\n    return this.http.get('/api/employees/' + empId + '/tasks'); //http://localhost:3000/api/employees/1/tasks\n  }\n\n  //createTask\n  addTask(empId: number, text: string) {\n    return this.http.post('/api/employees/' + empId + '/tasks', { text }); //http://localhost:3000/api/employees/1/tasks\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExC;EACAC,QAAQA,CAACC,KAAa;IACpB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,iBAAiB,GAAGD,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC;EAC9D;EAEA;EACAE,OAAOA,CAACF,KAAa,EAAEG,IAAY;IACjC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,iBAAiB,GAAGJ,KAAK,GAAG,QAAQ,EAAE;MAAEG;IAAI,CAAE,CAAC,CAAC,CAAC;EACzE;EAAC,QAAAE,CAAA,G;qBAZUT,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}