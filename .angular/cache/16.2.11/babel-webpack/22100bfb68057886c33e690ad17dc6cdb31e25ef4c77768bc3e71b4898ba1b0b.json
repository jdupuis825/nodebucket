{"ast":null,"code":"/**\n * Title: task.component.ts\n * Author: Jocelyn Dupuis\n * Date: 01/18/2024\n * Description: ts file for task component\n */\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let TasksComponent = class TasksComponent {\n  constructor(cookieService, taskService, fb) {\n    this.cookieService = cookieService;\n    this.taskService = taskService;\n    this.fb = fb;\n    this.newTaskForm = this.fb.group({\n      text: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(50)])]\n    });\n    this.employee = {};\n    this.todo = [];\n    this.done = [];\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.empId = parseInt(this.cookieService.get('session_user'), 10);\n    this.taskService.getTasks(this.empId).subscribe({\n      next: res => {\n        console.log('Employee', res);\n        this.employee = res;\n      },\n      error: err => {\n        console.error('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert(); //hide alert message\n      },\n\n      complete: () => {\n        this.employee.todo ? this.todo = this.employee.todo : this.todo = [];\n        this.employee.done ? this.done = this.employee.done : this.done = [];\n        console.log('todo', this.todo);\n        console.log('done', this.done);\n      }\n    });\n  }\n  addTask() {\n    const text = this.newTaskForm.controls['text'].value;\n    this.taskService.addTask(this.empId, text).subscribe({\n      next: task => {\n        console.log('Task added with Id', task.id);\n        const newTask = {\n          _id: task.id,\n          text: text\n        };\n        this.todo.push(newTask); //Add task to todo list\n        this.newTaskForm.reset(); //reset form\n        this.successMessage = 'Task added successfully!';\n        this.hideAlert();\n      },\n      error: err => {\n        console.log('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert(); //hide alert message\n      }\n    });\n  }\n  //hides alert after 5 seconds\n  hideAlert() {\n    setTimeout(() => {\n      this.errorMessage = '';\n      this.successMessage = '';\n    }, 5000);\n  }\n};\nTasksComponent = __decorate([Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})], TasksComponent);","map":{"version":3,"names":["Component","Validators","TasksComponent","constructor","cookieService","taskService","fb","newTaskForm","group","text","compose","required","minLength","maxLength","employee","todo","done","errorMessage","successMessage","empId","parseInt","get","getTasks","subscribe","next","res","console","log","error","err","message","hideAlert","complete","addTask","controls","value","task","id","newTask","_id","push","reset","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/jocelynthegreat/Documents/buwebdev/nodebucket/src/app/tasks/tasks.component.ts"],"sourcesContent":["/**\n * Title: task.component.ts\n * Author: Jocelyn Dupuis\n * Date: 01/18/2024\n * Description: ts file for task component\n */\n\nimport { Component } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { TaskService } from '../shared/task.service';\nimport { Employee } from '../shared/employee.interface';\nimport { Item } from '../shared/item.interface';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent {\n  employee: Employee;\n  empId: number;\n  todo: Item[];\n  done: Item[];\n  errorMessage: string;\n  successMessage: string;\n\n  newTaskForm: FormGroup = this.fb.group({\n    text: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(50)])]\n  });\n\n  constructor(private cookieService: CookieService, private taskService: TaskService, private fb: FormBuilder) {\n    this.employee = {} as Employee;\n    this.todo = [];\n    this.done = [];\n    this.errorMessage = '';\n    this.successMessage = '';\n\n    this.empId = parseInt(this.cookieService.get('session_user'), 10);\n\n    this.taskService.getTasks(this.empId).subscribe({\n      next: (res: any) => {\n        console.log('Employee', res);\n        this.employee = res;\n      },\n      error: (err) => {\n        console.error('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert(); //hide alert message\n      },\n      complete: () => {\n        this.employee.todo ? this.todo = this.employee.todo : this.todo = [];\n        this.employee.done ? this.done = this.employee.done : this.done = [];\n\n        console.log('todo', this.todo);\n        console.log('done', this.done);\n\n      }\n    })\n  }\n\n  addTask() {\n    const text = this.newTaskForm.controls['text'].value;\n\n    this.taskService.addTask(this.empId, text).subscribe({\n      next: (task: any) => {\n        console.log('Task added with Id', task.id);\n        const newTask = {\n          _id: task.id,\n          text: text\n        }\n\n        this.todo.push(newTask); //Add task to todo list\n        this.newTaskForm.reset(); //reset form\n\n        this.successMessage = 'Task added successfully!';\n\n        this.hideAlert();\n      },\n      error: (err) => {\n        console.log('error', err);\n        this.errorMessage = err.message;\n        this.hideAlert(); //hide alert message\n      }\n    });\n  }\n\n  //hides alert after 5 seconds\n  hideAlert() {\n    setTimeout(() => {\n      this.errorMessage = '';\n      this.successMessage = '';\n    }, 5000)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}